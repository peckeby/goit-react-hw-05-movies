{"version":3,"file":"static/js/247.917ac5ad.chunk.js","mappings":"iRAEaA,EAAmB,mCAAG,WAAMC,GAAN,uFACVC,EAAAA,EAAAA,IAAA,wGAC4ED,IAFlE,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,6DADQ,cACzBH,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBG,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oFADK,cACtBH,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDAQdI,EAAiB,mCAAG,WAAOF,EAASL,GAAhB,uFACRC,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,iFACiGL,IAFzF,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,wDAMjBK,EAAgB,mCAAG,WAAOC,EAAQT,GAAf,uFACPC,EAAAA,EAAAA,IAAA,kHACsFQ,EADtF,iBACqGT,EADrG,wBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,uD,yHCuB7B,UA9CA,WACE,IAAQO,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAG4BV,EAAAA,EAAAA,IAAeI,GAH3C,OAGUU,EAHV,OAIIN,EAAQM,EAAUP,MAJtB,gDAMIK,EAAS,EAAD,IANZ,yBAQIF,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAACX,KAGF,gCACGK,IAAa,SAAC,IAAD,IACbE,IAAS,uEAAqCA,EAAMK,YACrD,wBACGT,EAAKU,OAAS,GACbV,EAAKW,KAAI,SAAAC,GAAQ,OACf,2BACE,gBACEC,IAAG,8CAAyCD,EAASE,cACrDC,IAAKH,EAASI,KACdC,OAAQ,OAEV,uBAAIL,EAASI,QACb,uCAAeJ,EAASM,eAPjBN,EAASf,GADH,QAc1B,C,6EC/Cc,SAASsB,IACtB,OACE,SAAC,KAAD,CACEF,OAAO,KACPG,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGd,C","sources":["api/api.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async num => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=369463d5ad6fe666accc0e43886b3c6a&page=${num}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=369463d5ad6fe666accc0e43886b3c6a&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=369463d5ad6fe666accc0e43886b3c6a&language&language=en-US\n    `\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (movieId, num) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=369463d5ad6fe666accc0e43886b3c6a&language=en-US&page=${num}`\n  );\n  return response.data;\n};\nexport const fetchMovieSearch = async (search, num) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=369463d5ad6fe666accc0e43886b3c6a&language=en-US&query=${search}&page=${num}&include_adult=true`\n  );\n  return response.data;\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { fetchMovieCast } from 'api/api';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nfunction Cast() {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function movieCastFetch() {\n      setIsLoading(true);\n      try {\n        const castFetch = await fetchMovieCast(id);\n        setCast(castFetch.cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    movieCastFetch();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Whoops, something went wrong ðŸ˜¢: {error.message}</p>}\n      <ul>\n        {cast.length > 0 &&\n          cast.map(castHero => (\n            <li key={castHero.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${castHero.profile_path}`}\n                alt={castHero.name}\n                height={100}\n              ></img>\n              <p>{castHero.name}</p>\n              <p>Character: {castHero.character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n\nCast.propTypes = {};\n\nexport default Cast;\n","import { Bars } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Bars\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"bars-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n"],"names":["fetchTrendingMovies","num","axios","response","data","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","search","id","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","castFetch","movieCastFetch","message","length","map","castHero","src","profile_path","alt","name","height","character","Loader","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}