{"version":3,"file":"static/js/723.783063af.chunk.js","mappings":"iRAEaA,EAAmB,mCAAG,WAAMC,GAAN,uFACVC,EAAAA,EAAAA,IAAA,wGAC4ED,IAFlE,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,6DADQ,cACzBH,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBG,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oFADK,cACtBH,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDAQdI,EAAiB,mCAAG,WAAOF,EAASL,GAAhB,uFACRC,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,iFACiGL,IAFzF,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,wDAMjBK,EAAgB,mCAAG,WAAOC,EAAQT,GAAf,uFACPC,EAAAA,EAAAA,IAAA,kHACsFQ,EADtF,iBACqGT,EADrG,wBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,uD,6EC5Bd,SAASO,IACtB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGd,C,yKCXYC,EAAeC,EAAAA,GAAAA,GAAH,yJASZC,EAAYD,EAAAA,GAAAA,GAAH,yCAITE,EAAiBF,EAAAA,GAAAA,OAAH,iaAuBdG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sC,mMCpCTK,EAAaL,EAAAA,GAAAA,KAAH,iIAQVM,GAAYN,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0EAMTO,EAAQP,EAAAA,GAAAA,MAAH,oG,SC+FlB,EApGmB,WACjB,OAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAE/B,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,WAAS,kBAAOF,GAAgB,EAAvB,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAAwBR,EAAAA,EAAAA,UAAS,GAAjC,eAAOS,EAAP,KAAaC,EAAb,KACA,GAAoCV,EAAAA,EAAAA,UAAS,GAA7C,eAAOW,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,OAiBjBC,EAAAA,EAAAA,YAAU,WACR,GAAIV,EAAa,CAAC,IACDW,EADA,mCACf,2FACEd,GAAa,GADf,mBAGiC1B,EAAAA,EAAAA,IAAiB6B,EAAaI,GAH/D,OAGUQ,EAHV,OAKQT,EADJC,EAAO,EACa,SAAAS,GAAS,OACvBA,EAAUC,OAAOF,EAAeG,QADT,EAGTH,EAAeG,SAE1B,IAATX,GAAcG,EAAcK,EAAeI,aAV/C,gDAYIjB,EAAS,EAAD,IAZZ,yBAcIF,GAAa,GAdjB,4EADe,qDAkBfc,GACD,CACF,GAAE,CAACX,EAAaI,IASjB,OACE,6BACE,UAACjB,EAAD,CAAY8B,SA/CK,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAcF,EAAKG,SAAS,GAAGC,MACrC,GAAoB,KAAhBF,EACF,OAAOG,MAAM,gCAEXH,IAAgBtB,EAClBC,EAAeqB,GAEfG,MAAM,6CAERL,EAAKM,OACN,EAkCG,WACE,SAACrC,EAAD,CACEsC,KAAK,OACLC,aAAa,MACbC,KAAK,SACLC,YAAY,qBACZC,SAVkB,SAAAC,GAAC,OAAIxC,EAAgB,CAAEC,MAAOuC,EAAEC,OAAOT,OAAtC,KAYrB,SAACpC,EAAD,CAAWuC,KAAK,SAASE,KAAK,aAA9B,UACE,0CAGHjC,IAAa,SAACvB,EAAA,EAAD,IACbyB,IAAS,uEAAqCA,EAAMoC,WACpDhC,EAAaiC,OAAS,IACrB,UAAC,KAAD,WACGjC,EAAakC,KAAI,SAAAC,GAAK,aACrB,yBACE,UAAC,KAAD,CAAWC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMjC,GAArD,WACE,gBACEkC,IAAG,8CAAyCL,EAAMM,aAClDC,IAAG,UAAKP,EAAMR,KAAX,WACHvD,OAAQ,IACRuE,QAAQ,UAEV,wCAAIR,QAAJ,IAAIA,OAAJ,EAAIA,EAAOR,YAAX,QAAmBQ,EAAMS,qBARpBT,EAAME,GADM,IAatBjC,EAAa,GAAKF,EAAOE,IACxB,SAAC,KAAD,CAAgBqB,KAAK,SAASoB,QAvCrB,SAAA7B,GACjBA,EAAIC,iBACJd,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,CAAhB,GAClB,EAoCS,8BAQX,C","sources":["api/api.js","components/Loader/Loader.jsx","pages/HomePage/HomePage.styled.js","pages/MoviesPage/Movies.styled.js","pages/MoviesPage/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async num => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=369463d5ad6fe666accc0e43886b3c6a&page=${num}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=369463d5ad6fe666accc0e43886b3c6a&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=369463d5ad6fe666accc0e43886b3c6a&language&language=en-US\n    `\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (movieId, num) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=369463d5ad6fe666accc0e43886b3c6a&language=en-US&page=${num}`\n  );\n  return response.data;\n};\nexport const fetchMovieSearch = async (search, num) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=369463d5ad6fe666accc0e43886b3c6a&language=en-US&query=${search}&page=${num}&include_adult=true`\n  );\n  return response.data;\n};\n","import { Bars } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Bars\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"bars-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'components/SharedLayout/SharedLayout.styled';\n\nexport const MovieGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  justify-content: center;\n  padding-inline-start: 0;\n`;\n\nexport const MovieItem = styled.li`\n  width: 200px;\n`;\n\nexport const PageLoadButton = styled.button`\n  cursor: pointer;\n  width: 200px;\n  height: 40px;\n  outline: none;\n  border: none;\n  background-color: orange;\n  color: aliceblue;\n  font-weight: 600;\n  border-radius: 13px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: black;\n    color: orange;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  padding: 0;\n`;\n","import styled from 'styled-components';\nimport { PageLoadButton } from 'pages/HomePage/HomePage.styled';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  flex-direction: row;\n  margin-top: 30px;\n  gap: 30px;\n  justify-content: center;\n`;\n\nexport const SubmitBtn = styled(PageLoadButton)`\n  display: block;\n  margin: 0;\n  width: 100px;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  border-bottom: 1px solid orange;\n  text-align: center;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport { fetchMovieSearch } from 'api/api';\nimport {\n  MovieGallery,\n  MovieLink,\n  PageLoadButton,\n} from 'pages/HomePage/HomePage.styled';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { FormSearch, SubmitBtn, Input } from './Movies.styled';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchQuery, setSearchQuery] = useState(() => (query ? query : ''));\n  const [resultSearch, setResultSearch] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const location = useLocation();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const searchValue = form.elements[0].value;\n    if (searchValue === '') {\n      return alert('Please, type any movie name!');\n    }\n    if (searchValue !== searchQuery) {\n      setSearchQuery(searchValue);\n    } else {\n      alert('You have already searched for that movie!');\n    }\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      async function searchMovieFetch() {\n        setIsLoading(true);\n        try {\n          const searchedMovies = await fetchMovieSearch(searchQuery, page);\n          page > 1\n            ? setResultSearch(prevState =>\n                prevState.concat(searchedMovies.results)\n              )\n            : setResultSearch(searchedMovies.results);\n\n          page === 1 && setTotalPages(searchedMovies.total_pages);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n      searchMovieFetch();\n    }\n  }, [searchQuery, page]);\n\n  const pageChange = evt => {\n    evt.preventDefault();\n    setPage(prevState => prevState + 1);\n  };\n\n  const updateQueryString = e => setSearchParams({ query: e.target.value });\n\n  return (\n    <main>\n      <FormSearch onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"search\"\n          placeholder=\"Type name of movie\"\n          onChange={updateQueryString}\n        />\n        <SubmitBtn type=\"submit\" name=\"btn-submit\">\n          <span>Search</span>\n        </SubmitBtn>\n      </FormSearch>\n      {isLoading && <Loader />}\n      {error && <p>Whoops, something went wrong ðŸ˜¢: {error.message}</p>}\n      {resultSearch.length > 0 && (\n        <MovieGallery>\n          {resultSearch.map(movie => (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                  alt={`${movie.name} poster`}\n                  height={300}\n                  loading=\"lazy\"\n                ></img>\n                <p>{movie?.name ?? movie.original_title}</p>\n              </MovieLink>\n            </li>\n          ))}\n          {totalPages > 1 && page < totalPages && (\n            <PageLoadButton type=\"button\" onClick={pageChange}>\n              More movies\n            </PageLoadButton>\n          )}\n        </MovieGallery>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["fetchTrendingMovies","num","axios","response","data","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","search","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieGallery","styled","MovieItem","PageLoadButton","MovieLink","Link","FormSearch","SubmitBtn","Input","useSearchParams","searchParams","setSearchParams","query","get","useState","isLoading","setIsLoading","error","setError","searchQuery","setSearchQuery","resultSearch","setResultSearch","page","setPage","totalPages","setTotalPages","location","useLocation","useEffect","searchMovieFetch","searchedMovies","prevState","concat","results","total_pages","onSubmit","evt","preventDefault","form","currentTarget","searchValue","elements","value","alert","reset","type","autoComplete","name","placeholder","onChange","e","target","message","length","map","movie","to","id","state","from","src","poster_path","alt","loading","original_title","onClick"],"sourceRoot":""}